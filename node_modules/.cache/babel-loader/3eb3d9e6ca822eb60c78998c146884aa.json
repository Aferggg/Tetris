{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tetris/tetris/src/components/Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createStage } from '../gameHelpers'; // styled components\n\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris'; //custom hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage'; //components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n  const movePlayer = dir => {};\n\n  const startGame = () => {};\n\n  const drop = () => {};\n\n  const dropPlayer = () => {};\n\n  const move = ({\n    keycode\n  }) => {};\n\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tetris, \"seKlr7bO340VRWlQWNLItWGrOOg=\", false, function () {\n  return [usePlayer, useStage];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["/Users/learnacademy/Desktop/tetris/tetris/src/components/Tetris.js"],"names":["React","useState","createStage","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","movePlayer","dir","startGame","drop","dropPlayer","move","keycode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACc,MAAD,IAAWV,SAAS,EAA1B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,MAAD,CAAlC;;AAEA,QAAMG,UAAU,GAAGC,GAAG,IAAI,CAEzB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAe,CAE3B,CAFD;;AAKA,sBACI,QAAC,mBAAD;AAAA,2BACI,QAAC,YAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAER;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAA,mBACKH,QAAQ,gBACL,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEA,QAAnB;AAA6B,UAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGT;AAAA,kCACA,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA/CD;;GAAMH,M;UAIeL,S,EACSC,Q;;;KALxBI,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { createStage } from '../gameHelpers';\n// styled components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n//custom hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\n//components\nimport Stage from './Stage'\nimport Display from './Display'\nimport StartButton from './StartButton'\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player] = usePlayer();\n    const [stage, setStage] = useStage(player);\n\n    const movePlayer = dir => {\n\n    }\n\n    const startGame = () => {\n\n    }\n\n    const drop = () => {\n\n    }\n\n    const dropPlayer = () => {\n\n    }\n\n    const move = ({keycode}) => {\n\n    }\n\n\n    return(\n        <StyledTetrisWrapper>\n            <StyledTetris>\n                <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                    <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (   \n                <div>\n                <Display text=\"Score\" />\n                <Display text=\"Rows\" />\n                <Display text=\"Level\" />\n                </div>\n                 )}\n                <StartButton />\n            </aside>\n         </StyledTetris>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}